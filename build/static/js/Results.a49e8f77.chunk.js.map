{"version":3,"sources":["components/Results/Results.module.css","components/Results/Chart/Chart.module.css","assets/images/cat176.png","assets/images/cat120.png","assets/images/cat120default.png","components/Results/Chart/Chart.js","components/Results/Results.js"],"names":["module","exports","options","legend","display","rotation","Math","PI","tooltips","mode","callbacks","label","tooltipItem","data","labels","index","Diagram","correctAnswers","allAnswers","chartCorrect","ceil","chartInCorrect","className","s","container","incorrect","correct","datasets","backgroundColor","hoverBackgroundColor","borderWidth","chart","Results","useSelector","state","answers","nameTest","useState","dataAnswers","setDataAnswers","dispatch","useDispatch","useEffect","a","postUserAnswers","console","error","getAnswers","undefined","sectionTitle","sectionSubtitle","right","total","resultsWrapper","resultData","srcSet","cat176","media","alt","cat120","src","defaultImg","testResult","testResultDescription","to","routes","TEST_VIEW","onClick","actionResetAnswers","sectionButton"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,aAAe,8BAA8B,WAAa,4BAA4B,cAAgB,+BAA+B,gBAAkB,iCAAiC,WAAa,4BAA4B,sBAAwB,uCAAuC,eAAiB,kC,oBCA1WD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,2B,qJCD5C,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,0C,yCCkBnCC,EAAU,CACdC,OAAQ,CACNC,SAAS,GAEXC,SAAU,GAAMC,KAAKC,GAAM,GAAK,IAAOD,KAAKC,GAC5CC,SAAU,CACRC,KAAM,QACNC,UAAW,CACTC,MAAO,SAACC,EAAaC,GACnB,IAAIF,EAAQE,EAAKC,OAAOF,EAAYG,QAAU,GAC9C,MAAM,GAAN,OAAUJ,OAsBHK,EAjBC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WAC3BC,EAAeb,KAAKc,KAAuB,IAAjBH,EAAwBC,GAClDG,EAAiB,IAAMF,EAE7B,OACE,8BACE,qBAAKG,UAAWC,IAAEC,UAAlB,SACE,cAAC,MAAD,CACEX,KAAM,kBArCeY,EAqCkBJ,EApClC,CACXP,OAAQ,CAAC,GAAD,OAFUY,EAqCaP,EAnCvB,qBAAyBM,EAAzB,YACRE,SAAU,CACR,CACEd,KAAM,CAACa,EAASD,GAChBG,gBAAiB,CAAC,UAAW,WAC7BC,qBAAsB,CAAC,UAAW,WAClCC,YAAa,KARA,IAACJ,EAASD,GAsCrBvB,QAASA,EACToB,UAAWC,IAAEQ,a,uBC2DRC,EA1FC,WAAO,IAAD,EACUC,aAAY,SAAAC,GAAK,OAAIA,KAA3CC,EADY,EACZA,QAASC,EADG,EACHA,SADG,EAEkBC,mBAAS,MAF3B,mBAEbC,EAFa,KAEAC,EAFA,KAGdC,EAAWC,cAEjBC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2BC,YAAgBR,EAAUD,GAFrD,uBAEYtB,EAFZ,EAEYA,KAFZ,SAGU0B,EAAe1B,GAHzB,uDAKIgC,QAAQC,MAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACX,EAAUD,IAMd,OACE,wCACmBa,IAAhBV,GAA6C,OAAhBA,GAC5B,kCACE,sBAAKhB,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAE0B,aAAjB,qBACA,oBAAI3B,UAAWC,IAAE2B,gBAAjB,+BACA,cAAC,EAAD,CACEjC,eAAgBqB,EAAYa,MAC5BjC,WAAYoB,EAAYc,QAE1B,sBAAK9B,UAAWC,IAAE8B,eAAlB,UACE,oBAAG/B,UAAWC,IAAE+B,WAAhB,8BACoBhB,EAAYa,SAEhC,oBAAG7B,UAAWC,IAAE+B,WAAhB,8BACoBhB,EAAYc,YAGlC,oCACE,wBACEG,OAAQC,EACRC,MAAM,oBACNC,IAAI,qBAEN,wBACEH,OAAQI,EACRF,MAAM,oBACNC,IAAI,qBAEN,qBAAKE,IAAKC,EAAYH,IAAI,wBAE3BpB,EAAYa,QAAUb,EAAYc,OACjC,qCACE,mBAAG9B,UAAWC,IAAEuC,WAAhB,wBACA,mBAAGxC,UAAWC,IAAEwC,sBAAhB,kCAGHzB,EAAYc,MAAQ,EAAId,EAAYa,MACnC,qCACE,mBAAG7B,UAAWC,IAAEuC,WAAhB,sBACA,mBAAGxC,UAAWC,IAAEwC,sBAAhB,4DAKF,qCACE,mBAAGzC,UAAWC,IAAEuC,WAAhB,8BACA,mBAAGxC,UAAWC,IAAEwC,sBAAhB,8CAKJ,iCACE,cAAC,IAAD,CACEC,GAAIC,IAAOC,UACXC,QA5DS,WACrB3B,EAAS4B,YAAmB,MA4DhB9C,UAAWC,IAAE8C,cAHf","file":"static/js/Results.a49e8f77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Results_container__1oA7S\",\"sectionTitle\":\"Results_sectionTitle__1pJ0c\",\"testResult\":\"Results_testResult__DpaEp\",\"sectionButton\":\"Results_sectionButton__1BDRN\",\"sectionSubtitle\":\"Results_sectionSubtitle__3Q454\",\"resultData\":\"Results_resultData__ZDZ0U\",\"testResultDescription\":\"Results_testResultDescription__v3ENJ\",\"resultsWrapper\":\"Results_resultsWrapper__3lroR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__3f_lq\",\"container\":\"Chart_container__1IfJ8\"};","export default __webpack_public_path__ + \"static/media/cat176.04304494.png\";","export default __webpack_public_path__ + \"static/media/cat120.d6156e7a.png\";","export default __webpack_public_path__ + \"static/media/cat120default.d6156e7a.png\";","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport s from './Chart.module.css';\r\n\r\nconst getChartData = (correct, incorrect) => {\r\n  const data = {\r\n    labels: [`${correct}% Right`, `${incorrect}% Wrong`],\r\n    datasets: [\r\n      {\r\n        data: [correct, incorrect],\r\n        backgroundColor: ['#FF6B01', '#D7D7D7'],\r\n        hoverBackgroundColor: ['#FF6B08', '#D6D6D6'],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n  return data;\r\n};\r\nconst options = {\r\n  legend: {\r\n    display: true,\r\n  },\r\n  rotation: 0.2 * Math.PI - (25 / 180) * Math.PI,\r\n  tooltips: {\r\n    mode: 'point',\r\n    callbacks: {\r\n      label: (tooltipItem, data) => {\r\n        let label = data.labels[tooltipItem.index] || '';\r\n        return `${label}`;\r\n      },\r\n    },\r\n  },\r\n};\r\nconst Diagram = ({ correctAnswers, allAnswers }) => {\r\n  const chartCorrect = Math.ceil((correctAnswers * 100) / allAnswers);\r\n  const chartInCorrect = 100 - chartCorrect;\r\n  // const chartInCorrect = allAnswers - correctAnswers;\r\n  return (\r\n    <div>\r\n      <div className={s.container}>\r\n        <Pie\r\n          data={() => getChartData(chartCorrect, chartInCorrect)}\r\n          options={options}\r\n          className={s.chart}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diagram;\r\n","import { Link } from 'react-router-dom';\r\nimport s from './Results.module.css';\r\nimport routes from '../../routes';\r\nimport cat176 from '../../assets/images/cat176.png';\r\nimport cat120 from '../../assets/images/cat120.png';\r\nimport defaultImg from '../../assets/images/cat120default.png';\r\nimport Diagram from './Chart/Chart.js';\r\nimport { postUserAnswers } from '../../data/apiQueries';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { actionResetAnswers } from '../../redux/questions/questions-actions';\r\n\r\nconst Results = () => {\r\n  const { answers, nameTest } = useSelector(state => state);\r\n  const [dataAnswers, setDataAnswers] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function getAnswers() {\r\n      try {\r\n        const { data } = await postUserAnswers(nameTest, answers);\r\n        await setDataAnswers(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getAnswers();\r\n  }, [nameTest, answers]);\r\n\r\n  const handleTryAgain = () => {\r\n    dispatch(actionResetAnswers([]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {dataAnswers !== undefined && dataAnswers !== null && (\r\n        <section>\r\n          <div className={s.container}>\r\n            <h2 className={s.sectionTitle}>Results</h2>\r\n            <h3 className={s.sectionSubtitle}>[TESTING THEORY_]</h3>\r\n            <Diagram\r\n              correctAnswers={dataAnswers.right}\r\n              allAnswers={dataAnswers.total}\r\n            />\r\n            <div className={s.resultsWrapper}>\r\n              <p className={s.resultData}>\r\n                Current answers- {dataAnswers.right}\r\n              </p>\r\n              <p className={s.resultData}>\r\n                Total questions- {dataAnswers.total}\r\n              </p>\r\n            </div>\r\n            <picture>\r\n              <source\r\n                srcSet={cat176}\r\n                media=\"(min-width:768px)\"\r\n                alt=\"cat with a heart\"\r\n              />\r\n              <source\r\n                srcSet={cat120}\r\n                media=\"(min-width:320px)\"\r\n                alt=\"cat with a heart\"\r\n              />\r\n              <img src={defaultImg} alt=\"cat with a heart\" />\r\n            </picture>\r\n            {dataAnswers.right === dataAnswers.total && (\r\n              <>\r\n                <p className={s.testResult}>Very Good!</p>\r\n                <p className={s.testResultDescription}>Don't stop there!</p>\r\n              </>\r\n            )}\r\n            {dataAnswers.total / 2 < dataAnswers.right ? (\r\n              <>\r\n                <p className={s.testResult}>Not bad!</p>\r\n                <p className={s.testResultDescription}>\r\n                  But you still need to learn some materials.\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p className={s.testResult}>Not very good :(</p>\r\n                <p className={s.testResultDescription}>\r\n                  Your result is below average.\r\n                </p>\r\n              </>\r\n            )}\r\n            <button>\r\n              <Link\r\n                to={routes.TEST_VIEW}\r\n                onClick={handleTryAgain}\r\n                className={s.sectionButton}\r\n              >\r\n                Try again\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n"],"sourceRoot":""}